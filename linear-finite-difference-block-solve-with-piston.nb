(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    208868,       4235]
NotebookOptionsPosition[    206339,       4187]
NotebookOutlinePosition[    206714,       4203]
CellTagsIndexPosition[    206671,       4200]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialization", "Section",
 CellChangeTimes->{{3.8828823469078555`*^9, 
  3.882882349237961*^9}},ExpressionUUID->"42108651-6b61-4a1e-bd67-\
8bc5b7bfbc1c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"myPrint", "[", 
     RowBox[{"msg_", ",", "rest_"}], "]"}], "Input"], 
   StyleBox[":=", "Input"], 
   RowBox[{
    StyleBox["Print", "Input"], "[", 
    RowBox[{"StringForm", "@@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"msg", ",", "rest"}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"g", "=", "9.81"}], ";"}], "Input"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"l", "=", "100"}], ";"}], "Input"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Pool", " ", "length"}], "*)"}], 
   "Input"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"h", "=", "2"}], ";"}], "Input"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Pool", " ", "depth"}], "*)"}], "Input"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tMax", "=", "80"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"True", " ", "\[Rule]", " ", 
     RowBox[{"use", " ", "number", " ", "of", " ", "intervals"}]}], ",", " ", 
    RowBox[{
     RowBox[{"compute", " ", "the", " ", "step"}], ";", "\[IndentingNewLine]", 
     RowBox[{"False", " ", "\[Rule]", " ", 
      RowBox[{"use", " ", "the", " ", "step", " ", "size"}]}]}], ",", " ", 
    RowBox[{"compute", " ", "number", " ", "of", " ", "intervals"}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"useNIntervals", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{"useNIntervals", ",", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xIntervals", "=", "250"}], ";", "\[IndentingNewLine]", 
     RowBox[{"zIntervals", "=", "30"}], ";"}], "\[IndentingNewLine]", ")"}], 
   ",", 
   RowBox[{"(*", "else", "*)"}], " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stepTarget", "=", "0.5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xIntervals", "=", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"l", "/", "stepTarget"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"zIntervals", "=", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"h", "/", "stepTarget"}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"xIntervals", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"zIntervals", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numNodes", "=", 
   RowBox[{"n", "*", "m"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]x", "=", 
   RowBox[{"N", "[", 
    RowBox[{"l", "/", "xIntervals"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]z", "=", 
   RowBox[{"N", "[", 
    RowBox[{"h", "/", "zIntervals"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]", "=", 
    RowBox[{"Min", "[", 
     RowBox[{"\[CapitalDelta]x", ",", "\[CapitalDelta]z"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tIntervals", "=", 
   RowBox[{"Ceiling", "[", 
    RowBox[{"tMax", "/", "\[Tau]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"tIntervals", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]", "=", 
   RowBox[{"N", "[", 
    RowBox[{"tMax", "/", "tIntervals"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xCoord", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[CapitalDelta]x", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zCoord", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[CapitalDelta]z", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tCoord", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "t"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"index", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "m"}], "+", 
      RowBox[{"(", 
       RowBox[{"j", "-", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myPrint", "[", 
   RowBox[{"\"\<Number of points X,Z,T = (``, ``, ``)\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "m", ",", "t"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myPrint", "[", 
    RowBox[{
    "\"\<\[CapitalDelta]x,\[CapitalDelta]z,\[Tau] = (``, ``, ``)\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]x", ",", "\[CapitalDelta]z", ",", "\[Tau]"}], 
      "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Surface", " ", "variable"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hInitial", "[", "x_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"(", "0.2", ")"}], "2", "\[Pi]"}]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "0.5"}], 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"x", "/", "l"}], "-", "0.3"}], "0.05"], ")"}], "^", "2"}]}],
      "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hVal", "=", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"hInitial", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "l"}], "}"}]}], "]"}], "/", "l"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hNorm", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"hInitial", "[", "x", "]"}], "-", "hVal"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hNorm", "[", "x_", "]"}], ":=", "0"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Right", " ", "boundary", " ", "movement"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightSpeed", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightPeriod", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightBlend", "=", 
   RowBox[{"2", "rightPeriod"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rightDisplace", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "0.1"}], 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"t", "*", "rightSpeed"}], "<", "1"}], ",", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"t", "*", "rightSpeed"}], ")"}], "^", "2"}]}], "-", 
       RowBox[{"2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"t", "*", "rightSpeed"}], ")"}], "^", "3"}]}]}], ",", 
      RowBox[{
       RowBox[{"t", "*", "rightSpeed"}], "<", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"t", "*", "rightSpeed"}], "-", "2"}], ")"}], "^", "2"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "t", "*", "rightSpeed"}], "-", "1"}], ")"}]}], ",", 
      "True", ",", "0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rightDisplace", "[", "t_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"t", "<", "rightBlend"}], ",", 
     RowBox[{
      RowBox[{"-", "1.5"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Pi]"}], "rightPeriod"], "t"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{
          RowBox[{"(", 
           FractionBox["t", "rightBlend"], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"(", 
           FractionBox["t", "rightBlend"], ")"}], "^", "3"}]}]}], ")"}]}], 
     ",", 
     RowBox[{"t", "<", 
      RowBox[{
       RowBox[{"tMax", "/", "2"}], "-", "rightBlend"}]}], ",", 
     RowBox[{
      RowBox[{"-", "1.5"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Pi]"}], "rightPeriod"], "t"}], "]"}]}], ",", 
     RowBox[{"t", "<", 
      RowBox[{"tMax", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"-", "1.5"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Pi]"}], "rightPeriod"], "t"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"t", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"tMax", "/", "2"}], "-", "rightBlend"}], ")"}]}], 
             "rightBlend"]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tMax", "/", "2"}], "-", "rightBlend"}], ")"}]}], 
              "rightBlend"]}], ")"}], ")"}], "^", "3"}]}]}], ")"}]}], ",", 
     "True", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightVelFunc", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"rightDisplace", "[", "q", "]"}], ",", "q"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rightVel", "[", "t_", "]"}], ":=", 
   RowBox[{"rightVelFunc", "/.", 
    RowBox[{"{", 
     RowBox[{"q", "\[Rule]", "t"}], "}"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rightVel", "[", "t_", "]"}], ":=", "0.0"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Matrix", " ", "helper"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerIdx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leftIdx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightIdx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bottomIdx", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topIdx", "=", "5"}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rightDisplace", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "tMax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rightVel", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "tMax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.882881189569041*^9, 3.882881285039916*^9}, {
   3.882881699417963*^9, 3.8828817510591793`*^9}, {3.882881886518013*^9, 
   3.882882120667685*^9}, {3.8828822690676193`*^9, 3.8828823081074862`*^9}, {
   3.8828824010573215`*^9, 3.8828824036082664`*^9}, {3.882882490807102*^9, 
   3.882882565956889*^9}, {3.8828826229169483`*^9, 3.882882823606498*^9}, {
   3.883229277511205*^9, 3.8832293606703324`*^9}, {3.8832294047266674`*^9, 
   3.883229407650838*^9}, {3.8832294439840136`*^9, 3.883229490901822*^9}, {
   3.883229551871355*^9, 3.883229553433442*^9}, {3.8832296002918777`*^9, 
   3.8832296713901415`*^9}, {3.883230225452199*^9, 3.883230236453184*^9}, {
   3.8832302824289927`*^9, 3.8832303845022154`*^9}, {3.8832304157291336`*^9, 
   3.883230418899759*^9}, {3.8832305321625156`*^9, 3.883230648135902*^9}, {
   3.8832306922321787`*^9, 3.883231027388382*^9}, {3.8832311024703827`*^9, 
   3.8832311073115196`*^9}, {3.883231504019458*^9, 3.8832316120118876`*^9}, {
   3.8832316442243385`*^9, 3.8832317850550585`*^9}, {3.883231822717415*^9, 
   3.8832318256693783`*^9}, {3.883231863611047*^9, 3.8832318660479465`*^9}, {
   3.8832319100923834`*^9, 3.883231918240924*^9}, {3.883231972040289*^9, 
   3.8832319859749436`*^9}, {3.8832320301535716`*^9, 3.883232030825303*^9}, {
   3.8832320764264746`*^9, 3.8832321431317053`*^9}, {3.8832323811955166`*^9, 
   3.883232383179262*^9}, {3.8832332753874083`*^9, 3.883233301665714*^9}, {
   3.883233607300892*^9, 3.883233729753194*^9}, {3.8832340378118873`*^9, 
   3.883234039281787*^9}, {3.8832341271326303`*^9, 3.8832341923303413`*^9}, {
   3.88323494626569*^9, 3.8832350204534082`*^9}, {3.883235892256832*^9, 
   3.883235908713058*^9}, {3.8833734074209833`*^9, 3.883373443720086*^9}, 
   3.883373476647803*^9, 3.8833735763633313`*^9, {3.883388703694976*^9, 
   3.8833887121640587`*^9}, {3.883392814600442*^9, 3.8833928416408587`*^9}, {
   3.88339339830197*^9, 3.883393400879373*^9}, {3.883400916773037*^9, 
   3.88340091730602*^9}, {3.8834034225346975`*^9, 3.883403463355422*^9}, {
   3.883404137896467*^9, 3.8834041679198155`*^9}, {3.883405180049349*^9, 
   3.8834052040991335`*^9}, 3.8834095887739196`*^9, {3.8834098834349403`*^9, 
   3.883409883638031*^9}, {3.8834101602142787`*^9, 3.883410234687046*^9}, 
   3.883410267240859*^9, {3.8834116975103626`*^9, 3.8834117281491528`*^9}, {
   3.8834117930805645`*^9, 3.883411813616927*^9}, 3.8835733122812424`*^9, {
   3.8835733797112107`*^9, 3.883573379905548*^9}, 3.8835734229913073`*^9, {
   3.883577267315708*^9, 3.8835773176108828`*^9}, {3.8836533629249134`*^9, 
   3.8836534022550354`*^9}, {3.8836553306319695`*^9, 
   3.8836553312811623`*^9}, {3.883656807852338*^9, 3.8836568080781116`*^9}, {
   3.8836574579088354`*^9, 3.883657461508005*^9}, 3.883657513028308*^9, 
   3.883657550992952*^9, {3.8836576501729927`*^9, 3.883657655418036*^9}, {
   3.883657742833256*^9, 3.8836577454907207`*^9}, {3.8836580168794155`*^9, 
   3.8836580633887625`*^9}, {3.883659284024026*^9, 3.8836592877728615`*^9}, 
   3.883659462161868*^9, {3.8836597649010334`*^9, 3.883659790211153*^9}, {
   3.8836599414107876`*^9, 3.8836599960502415`*^9}, {3.883660350990017*^9, 
   3.8836603582900705`*^9}, {3.883662156726635*^9, 3.883662160125948*^9}, 
   3.883662203765709*^9, {3.883662250556717*^9, 3.883662257755525*^9}, {
   3.883662495595612*^9, 3.8836625397054014`*^9}, {3.8836625899260306`*^9, 
   3.8836626247751455`*^9}, {3.8837111235028553`*^9, 3.883711128279848*^9}, {
   3.883713095681316*^9, 3.8837131262438216`*^9}, {3.88371317177678*^9, 
   3.8837131718393183`*^9}, {3.8837978175905385`*^9, 
   3.8837978195926905`*^9}, {3.883797849999239*^9, 3.8837978507491436`*^9}, {
   3.883797883030125*^9, 3.883797884330937*^9}, {3.883797917421305*^9, 
   3.8837979420349627`*^9}, 3.8837999936021204`*^9, {3.883800363259706*^9, 
   3.883800374792748*^9}, {3.8839188861654983`*^9, 3.8839189121354375`*^9}, {
   3.8839208724636574`*^9, 3.883920912409958*^9}, {3.883921075999674*^9, 
   3.883921133259288*^9}, {3.8839212098553085`*^9, 3.8839213546180716`*^9}, {
   3.883921522070225*^9, 3.883921551894332*^9}, {3.883921610997435*^9, 
   3.883921645288504*^9}, {3.8839271985216722`*^9, 3.8839272002434206`*^9}, 
   3.8839277059414225`*^9, {3.883928038576931*^9, 3.883928038711166*^9}, {
   3.883961292917049*^9, 3.883961356689355*^9}, 3.88396139700294*^9, {
   3.8839618049721236`*^9, 3.8839618417312064`*^9}, {3.883962103083639*^9, 
   3.8839621461548605`*^9}, {3.885029704308407*^9, 3.885029707998022*^9}, {
   3.8850437159912276`*^9, 3.8850437228941813`*^9}, {3.8852115939312353`*^9, 
   3.8852115953617115`*^9}, {3.8858232839606133`*^9, 
   3.8858233153964677`*^9}, {3.894877309900928*^9, 3.8948773100510645`*^9}, {
   3.8948785575220594`*^9, 3.8948785604457283`*^9}, {3.894883519033478*^9, 
   3.8948835190805545`*^9}, {3.8948843013124733`*^9, 3.8948843014072437`*^9}, 
   3.894973217281951*^9, {3.8949759491154747`*^9, 3.8949759747648463`*^9}, {
   3.8949761255888543`*^9, 3.894976130118182*^9}, {3.8949761960050106`*^9, 
   3.8949762040011415`*^9}, 3.8949762803299227`*^9, {3.894976640362026*^9, 
   3.894976641531805*^9}, {3.895045866025898*^9, 3.8950458674575424`*^9}, {
   3.8950461279486876`*^9, 3.8950461280579944`*^9}, 3.895047741879305*^9, 
   3.896684309872614*^9, {3.896684480228635*^9, 3.896684489109021*^9}, {
   3.8967080034396133`*^9, 3.8967080047900577`*^9}, {3.8967086433948708`*^9, 
   3.8967086516390963`*^9}, 3.89670879265652*^9, {3.8967098943267927`*^9, 
   3.8967099536087255`*^9}, {3.896709987587927*^9, 3.8967100123918037`*^9}, {
   3.8967101886734724`*^9, 3.896710194801746*^9}, {3.896711378369624*^9, 
   3.896711378743414*^9}, {3.896711414042038*^9, 3.896711422843959*^9}, {
   3.8967117691861477`*^9, 3.896711769250244*^9}, {3.8967128103623085`*^9, 
   3.8967128681766467`*^9}, {3.896740438268834*^9, 3.8967404383359423`*^9}, {
   3.8967404920170407`*^9, 3.896740512063923*^9}, 3.896740663263901*^9, {
   3.8967410112920513`*^9, 3.896741175510852*^9}, {3.896741298410123*^9, 
   3.89674137884326*^9}, {3.8967414755345335`*^9, 3.8967415379559464`*^9}, {
   3.8967692380570216`*^9, 3.8967693128411407`*^9}, {3.896787632207713*^9, 
   3.8967876483299236`*^9}, {3.896787975107073*^9, 3.896787975360123*^9}, 
   3.896788015313796*^9, {3.896788074634733*^9, 3.896788086926906*^9}, {
   3.8967881176632833`*^9, 3.8967881482251387`*^9}, {3.896842120861164*^9, 
   3.896842130820939*^9}, {3.898270997813366*^9, 3.898271050416734*^9}, {
   3.8982711415307236`*^9, 3.898271141604515*^9}, {3.8982723780602493`*^9, 
   3.8982723980088882`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"a11c82e2-ee0a-4188-940e-f76bf6862d06"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"Number of points X,Z,T = \
(\\!\\(\\*RowBox[{\\\"201\\\"}]\\), \\!\\(\\*RowBox[{\\\"5\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"161\\\"}]\\))\"\>",
  StringForm["Number of points X,Z,T = (``, ``, ``)", 201, 5, 161],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8858233204690795`*^9, 3.8948773110208273`*^9, 3.894877644774263*^9, 
   3.8948785673490753`*^9, 3.8948835203632345`*^9, 3.894883669279363*^9, 
   3.894884301979841*^9, 3.894973218962136*^9, 3.894973396729633*^9, {
   3.894975952651951*^9, 3.8949759779914007`*^9}, 3.8949761319305615`*^9, {
   3.894976198735702*^9, 3.894976205041318*^9}, 3.894976280748523*^9, 
   3.894976732951341*^9, 3.8950457650873985`*^9, 3.895045868375567*^9, 
   3.8950461292600837`*^9, 3.8950477491103277`*^9, {3.896684291197356*^9, 
   3.896684318225955*^9}, 3.8966844922057915`*^9, 3.8967086981588764`*^9, 
   3.8967087935469146`*^9, 3.896710034006106*^9, 3.8967101959512186`*^9, 
   3.8967113817628555`*^9, 3.896711425524967*^9, 3.8967117698126307`*^9, 
   3.8967128737558637`*^9, 3.8967405127883883`*^9, 3.896740663766492*^9, 
   3.896741037159706*^9, {3.8967410688174095`*^9, 3.8967411207637644`*^9}, 
   3.89674118486714*^9, {3.896741354082907*^9, 3.8967413796983123`*^9}, 
   3.8967415526503644`*^9, {3.8967692339161053`*^9, 3.8967693133518496`*^9}, {
   3.896787633902018*^9, 3.8967876488080025`*^9}, 3.8967878851566763`*^9, 
   3.8967879762726173`*^9, 3.89678801560676*^9, 3.8967880884894342`*^9, 
   3.8967881188881683`*^9, 3.8967881580393877`*^9, {3.8968421143066206`*^9, 
   3.8968421325251694`*^9}, 3.898271060331686*^9, 3.8982711420461583`*^9, 
   3.898271686292631*^9, 3.898271843379064*^9, 3.898272009414505*^9, 
   3.898272401027521*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"f72a2746-8aac-45d4-8319-288f2953a0ac"],

Cell[BoxData[
 InterpretationBox["\<\"\[CapitalDelta]x,\[CapitalDelta]z,\[Tau] = \
(\\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\), \\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\))\"\>",
  StringForm[
  "\[CapitalDelta]x,\[CapitalDelta]z,\[Tau] = (``, ``, ``)", 0.5, 0.5, 0.5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8858233204690795`*^9, 3.8948773110208273`*^9, 3.894877644774263*^9, 
   3.8948785673490753`*^9, 3.8948835203632345`*^9, 3.894883669279363*^9, 
   3.894884301979841*^9, 3.894973218962136*^9, 3.894973396729633*^9, {
   3.894975952651951*^9, 3.8949759779914007`*^9}, 3.8949761319305615`*^9, {
   3.894976198735702*^9, 3.894976205041318*^9}, 3.894976280748523*^9, 
   3.894976732951341*^9, 3.8950457650873985`*^9, 3.895045868375567*^9, 
   3.8950461292600837`*^9, 3.8950477491103277`*^9, {3.896684291197356*^9, 
   3.896684318225955*^9}, 3.8966844922057915`*^9, 3.8967086981588764`*^9, 
   3.8967087935469146`*^9, 3.896710034006106*^9, 3.8967101959512186`*^9, 
   3.8967113817628555`*^9, 3.896711425524967*^9, 3.8967117698126307`*^9, 
   3.8967128737558637`*^9, 3.8967405127883883`*^9, 3.896740663766492*^9, 
   3.896741037159706*^9, {3.8967410688174095`*^9, 3.8967411207637644`*^9}, 
   3.89674118486714*^9, {3.896741354082907*^9, 3.8967413796983123`*^9}, 
   3.8967415526503644`*^9, {3.8967692339161053`*^9, 3.8967693133518496`*^9}, {
   3.896787633902018*^9, 3.8967876488080025`*^9}, 3.8967878851566763`*^9, 
   3.8967879762726173`*^9, 3.89678801560676*^9, 3.8967880884894342`*^9, 
   3.8967881188881683`*^9, 3.8967881580393877`*^9, {3.8968421143066206`*^9, 
   3.8968421325251694`*^9}, 3.898271060331686*^9, 3.8982711420461583`*^9, 
   3.898271686292631*^9, 3.898271843379064*^9, 3.898272009414505*^9, 
   3.8982724010335207`*^9},
 CellLabel->
  "During evaluation of \
In[89]:=",ExpressionUUID->"aa5b3661-242a-4669-9045-f4d712552d1c"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVlHc4Fn4Xxq3svfd8zMcqKiW+p0KRiChlJClKiZZEqYjyoyR7hSQj2bP4
IhUhe+89Mh7rscLr/etcn+u+zn2fc/44Ena3Ta9SUVBQXKakoPh/jX1iR7vX
/qu2ZUOtWtrXha9VLeKG58UjEdOp4cXHFv+V7fws8xYXT0WiB1OGzIy/lrEG
F2QxduYgarOJ0AGqjrLY8kCxPeLFqCJVwuWR5t8yxXn71zsOGNVG1DBrBW6U
9bHGbf/rqEQ3mbaCy8ZpMSGZ4cDG5g+UvaypYSnDiW9q3b+1KlaDHDTD3NgZ
hXBu62DS8vE6JDw5VpS4XwpvOBn2Ljg0oIN2e1MaDRRwPGXvq1XdJvST8SXV
2L29WKf+rTS5oxklOsdlv4k+gCcjTlQsX29FLVU1MufTj+AA+y2rpc02FJ/C
fH+s+yhWVc1dWwjsQPvusrQwjuvilk3HEJJYFzoa2NDo4WWAH/wSVZ3P7kak
tSNptpnGWPBda+3s8V5kTsnt21Jmists/B1m2vrQyMe40p01c2ynANR/HQbQ
QDPl1dlXFzDV5qOGZc9BpPpWvUHtvjVuHTQXWdYdQha32ikJA7b44Wem4sWO
YVRRrJP/+OtVbBA8TrsYP4KkdA/aOzxwxMIPK8wWro8iAaI3s9M1JzxnHZNI
2jeGnon5bowGOOPy426k+c0xpC4+6/d6xQUHy5tqz1eNI+f8VSmpijvYnk0p
YC5wAnHyV4jj1HuYrmdYdlZsCpkSuMo5Wh/izvLS+zOTU8j6uMynL7weOC05
4vvf7Gn0ZRO4xB4+xkZ3jC5NH59BlhO/eq8YPsPiFvIZU8yzKDk6+LLO5+d4
UYtmc7JtFpm4vTvDJ+yDwxhKwiYc5tHryC76bqIfznMzuHOXn4RqyLM0fbUv
ccz0QYElTxL68sI2b83DHzs3cjos6i6gF28+/7jI/BpzxlRTLXQsohjLrycr
V4LxJmtBqsuRJdQ8n2osuCcEjz77cIYUv4Rs7cUYmYRDcYHDk7j568uIc2jj
p7ZtOL6opn54bnMFnU2MrlnQisEJv9+7/hVbR6taLhTUwR/wckS+wkDAOtoJ
3j/XYZmE9RxqR5rX15Gvm+QmUe4jnqFeNS9p2UBORc+zfX4lYw0to8Ov/P4h
Xp+zy0uCabgx8x+V7PwOEtc38XW8nYU5EYMNizIFTGkw4FvdWVhTJuSwnz0F
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
h/4HRbHQ0g==
        "]], LineBox[CompressedData["
1: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
8nGD0v4atLGkannId1n+kf//v+i/hNZ8Gw==
        "]], LineBox[CompressedData["
1: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
fv8zgYDjH5/U7XiehTqPKF+QTyagTmTMW0ovC9XOUvmDUgkYLAx4V703CxVl
Hq9YzSDAIC/aXHUiE2U4az01yyEgq3+6LDglE4UsX5o7UkBAP9/Q2bpDmcgL
G38NLmb5JbIyujycgR49vmHFXkYAR2F4V1FoBjLjutNTXU3APZqGW8lqOhLZ
Vd6yWEdAsXv6ltmUdFStvKNGuomAaS21tfgqKy9WJd/d2gk4InFXLz4nDXE3
bAlRHCFgW4vY3Q+6qSgqLEP3Azsd1ryR3PdXKxnp5fBp/1xDZ/3Xkq26a5PQ
+kbDY3M8dFAMHqfv5ElCDjw8R85tpMOkl074Bfsv6Jj1RX5uUTp4aZF+t2jE
oQGVuYpbCnQQ1Z4yvLA/EgXqahUGK9FBX/UsEWQdgbRswrJ/kOkwdB+1kdLD
UVq4esxuGh12fB+Q2nfyE3q6NuhZkzYdQiV9XGcPhCJliQlXjrN01oXkOd7T
F4LGVWkOsjp0iLWOevHiYzDSsf1t8lKfDhMxJxSqDwaivS0koNygw1l25dtF
4W9RK8NTydKSDpKNFuVKb33Ra76+Q+9u0WGP3ZOetx4+aIbyasef23RYLi1x
TpZ+g2IudgntvEsHkys9XcUansjATn695j06NL0LeCrn4oGKI9sWIh+x+MlC
cSc3vUBOeYem657QofJK8Bi3vTs60Or2e8Wdxbdyn0dx8CnyWyfTqudJB272
Jnu89BipSz6seeZNh2SRbTXTYY/QErWh9OtbFv+xnCcBcQ/QNXuX9PXBdKBU
9Q8ktjsjRfmu9H2hdNiour0GJd5FfNOQoRZGh+uVRN+TD3dQZ0pExrUIOrTS
imL5Em6jZDvuzEfRdGivnu3Qa7ZDTw5bZIbG0qFDcNpnRMwWXfjzMzMngQ7r
hRwGz61YoSVbn6yZr6x+pA5Jf+kbqEZuJmtzBsv/tI2CyR6mKJxxIftQNh18
1TL39YubIMfk7GzNXDpM+zJL9aqMkIatWI45psPhqP2PpzIuIzG5hznPCulQ
JbchAi1eRIyp3pzwEjr0/c592RGgg4qSjn3DZXRoPjP/R9n9LAqw+fyt4ycd
AmbK1M54aCMLWb7c+Wo6+Ij7qOWFqyPVKavcrfV0sMrV7Bw7eQzxJ9XkHmmi
w6mpIMc6F0D91vLfz7TSwcVJbNVUn4wyDvl/v9XOykuVIg98UUCvJv99f9VF
h7jrbnoT32XRlUT9vM+9dIjQoYj3f5NCctbf84oH6JBO9o98KbcbcR4Sx73D
dEjh9PnUPLkNNU+44ZVRVp5NBq+wJW5CsV8GsegkHT4TDqwXNCdyvaWer/yH
Dptqd7Ua7GVSTx+Mz9edocO4nP21/ppB6p6JDQX2/+iwb0npgJViHZWZYFvw
ZoEOOwOuLmz9lkL93DMolLtEB15b77T9OV7U/wEC9hGi
        "]], LineBox[CompressedData["
1:eJxNz0FMEnAYBXAKDs6waS4baYrpMkVntXGwsqVYoaCJjLZwtSQRCMLVYGvG
VrkRWVlUTE3nWJC2xtBszM1yLBVFQnBZ1iHsoHOO6JAxNlEW1db+z7d9e/vd
vpctaa6TbqVQKGV/71+fzdod4lArjlP+J011foKZCAdZYxOlSfBoKMclToYl
yqDLlAazWfzJIQacEBqY9GfAg5c0Uwk5cEwRd+uK4dl8yfTTQ7Al6JoeZsOV
iruen0fgDvlObyMXLpax/PwG+Jsiq9neCN9XpSZvl2/ad2VDMKuGrTrvvEAH
73qsXDjTCcdHbT8u+Db9u6Nwm7bkBPHbgdaeQupJ4utbCmpnFuDEQAtX7ThF
vNyfbTLruMSm/QzaiKiS2Njd5G5gVhGLTef89BV4raIvanbyiJeWy6+NG/jE
ltKD6b6GamK7XpsiK6ohNogu8qgRmB149tLgO03cld9j9/FqiW+8a+/ijcDV
6aK+97kC4jK1uz6lDTZnSHJnInDuxIuOmvo67CsaL5hzwk1h2gdPgZBYMvSL
2fYQVrUKY1WPYK3Q8YX+BL4T0T4wdsADJdGNzl44Ohb/3G+DjXP0dpcb7rZe
lt/2wFaNn8P1wsNpxnWvHw6IU+Uf5+G8JQZncQk+4GjJfL4MH9Z/jUpXYH5e
76vgd/iqkpm5ugrrjt6Kvg7D+qTFT5oI3DVovbe2Bltu0mRv1mGbQFqui8GO
vVN7jv2GneF90Xgc/gPjSvFf
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$45723#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.894877311451007*^9, 3.8948776449691715`*^9, 3.8948785674493303`*^9, 
   3.8948835204851866`*^9, 3.894883669388301*^9, 3.894884302098345*^9, 
   3.8949732193847623`*^9, 3.8949733969505253`*^9, {3.894975952750913*^9, 
   3.894975978095807*^9}, 3.8949761320361133`*^9, {3.8949761988455777`*^9, 
   3.894976205150019*^9}, 3.894976280856413*^9, 3.8949767330532827`*^9, 
   3.8950457652501945`*^9, 3.8950458685057707`*^9, 3.8950461293789425`*^9, 
   3.895047749231258*^9, {3.8966842917241507`*^9, 3.8966843182719283`*^9}, 
   3.896684492259678*^9, 3.896708698566267*^9, 3.896708793652185*^9, 
   3.896710034058896*^9, 3.896710196002983*^9, 3.896711381818877*^9, 
   3.8967114256194167`*^9, 3.8967117698699894`*^9, 3.89671287383084*^9, 
   3.896740512888669*^9, 3.896740663837291*^9, 3.896741037252084*^9, {
   3.8967410689316797`*^9, 3.896741120853733*^9}, 3.8967411849989786`*^9, {
   3.8967413542671356`*^9, 3.896741379876574*^9}, 3.8967415528234367`*^9, {
   3.896769234430101*^9, 3.896769313529823*^9}, {3.8967876343066792`*^9, 
   3.89678764894847*^9}, 3.896787885779319*^9, 3.896787976397684*^9, 
   3.896788015726269*^9, 3.8967880885699368`*^9, 3.8967881190047584`*^9, 
   3.896788158201424*^9, {3.8968421144394627`*^9, 3.8968421326347103`*^9}, 
   3.8982710606996984`*^9, 3.89827114214295*^9, 3.8982716868244286`*^9, 
   3.8982718436014423`*^9, 3.8982720096847897`*^9, 3.89827240115493*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"e9373409-f03a-4212-87a9-3e2f30389f00"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1:eJw9Vnk0lXsXpqJE3ORq+Aop3ES957zvOS8lv52ShJKZJBlTkSlJGkjIvSpT
GmRIt5QiwqVOfpJKlGtKlKLMxDnnRyUaPt8/3x97PWuvvdez9nrWs9d6lrod
sPKcJiEhcW2q/oeFhkxLjDQFV08NnolqJXiu0saL4XIULDmXqkleEaxy00TH
ZB4FI76LTsk1ELzS0AzPXUTB6e8oUaGGYL2mrVbtahSoH2xR+l5BsPEeq57r
WhRs3jFPoamYYKsftqEBqyiYVRtSnpJD8K5ER1kD3tScyrlsfJHg/Vo706UN
KNi0z9ypO4bgwwJXToMRBW1er/qDggmO3u5Rddl0qtcw8//iQnByr7e9lyUF
dRbyNn4mBGcd2TdI2VNQwUvmvNclmKqQGY/ZSYFMhvacVUoEV8zIkepwpyCy
2jrn4bgYd8Z3q8X7UzAgahu4LhBj/8bIVd0hFHxSm+cmnSbGv5SXGqw9SoGF
1sx1BYfFWCVzp/3AaQoMtRcmflktxnndkx5wjgLhIhPqwiwxXrfiUmDqeQpK
BOmhSR0i7FzYEm+cTcEKe2+lG7EifKlqW1WWgIJixX91D50VYm2ZkYbxSgo4
LjHSxlpCXGbxV8e25xQIFi4JlBeM4NaW6okfryjQbK5uftg+jJUH1nOchBQE
q4yGPJ4cwolzmHRFdQ5cV9F+Ru73YXWrxlyfPzgQV9pxUqzVhwvO+5dVrOKA
cnvAksLEXlyveqfZby0Hjr61FRbu7sHyXE3ZWhsOmCYIGm36PuI4uwWhJ2M4
8Eh0eShu3VscmfF9+9gnDsAz4Y1naQXYkioNWDnKAeE998lbghtY5VFQgts3
DvCPuc1TP3IB3/84WF8vxYVQ46Csr6dSENFo23ZHhQsLmRJRhb0Aud0utvCy
5EL2hDIl3tOIqHUBvlfsuOBus0t68kUT+vlSJ77ZmQsJnGmyuqtfoUvC7BdG
PlxQ1ysaOTX8GjVyE81UI7nQOdppEL71HVpf5mfaeo8LM16treiq7ELyW7R9
FO5z4UF8plKeSzdqf9MTu6mCCxl2qTOTxrtR6Hfn6qIXXNj4NDo3SLMX3UVm
Jgk9XMgP2Zsw26cfHauX9q4e4sLml8Xmy8b6kfnuyuhfYi58C/yyfyB8APVH
6j/1/cmFmoiQP8xiBpHaUy3jLfNpqIIMQ/ljn9CIXZdHxBIaYk5VOKz5/AkJ
+tKjSpfRcGnHBd8in2HkIKNcpUnRcO3v5r3eW0aQ5qWGrp18Giw7JHz+LBlB
Y9rx01MMaLBL9jzbpCpE58xnbJhuSoMpb773zQEhcnmH3dZso8HvyFEtRQ0R
0vE7EhlgS8PNDdP66qxFqPosedSxm4aLTpuli2+L0Hm1vA/Ke2gIR6WqLS0i
5FHgI7nVjwZ7j3fjnr9ESKKpEwRhNBjM+PC50kyMogbKs8IiaMg9PuB8IlCM
ZCSuTNOPpeGZcb29TaoYnVE+4v71DA3R/BPv1twXI0Vdx6riFBr+PPBlEfVW
jFI3sBrBaTR0JN4JoibEaLHT79HcbBpUfp8eqTefII2YBpP8uzRYvb66ztqM
oFtX8nN8/6Ehc/92nqsbQauK4mV0ymlopGeG+hwi6F7Nvr2DVTTIH8z9Z38c
QXofTGtzammoO9r/3vsyQYKvWjrejTTUzvWa63iLoPXy0vEabTSsvPIj1/Af
gp4u7x7u6qDBQr1/4/xKgrasrdx6tZcG6n1P7ocaguq2Z+a7Dk/dl7FrMK2B
IOs9x35THaOh+3nEhs0tBLUecw54N0HDvdnbma5WgpxT1jRelmTAOb80yLeN
oM7cBbTTLAYcbiaS3tcEeVZ+SVqgwMAD/s2325oJGmxtHmv5nYF2TmFSTh1B
fsJC25TFDGyZtbFM/JQgIpVQYr2MAVWnquU6Dwk6tPjAfEVtBp5tsOx3KCDo
O9citJ5ioNAmfdvhbIJOmK5sO8MyYMR/03EmiSApV5k1FoYMfJYOs78cQVBc
SN8lWWMGTvrNycv0JUg+/snkczMGOP7SSln2BCVlZzvHWjEQIhlO0hFBC+5H
PNzkyEDpvt7BNA2C0up3qUi5MhBw4lXLFRmCrv/4T2eELwM3G3+TLq4VI22l
CYBgBo45zlBsvClG+dqtWT/DGEhokLv665QYldonux+JZWA/fZtN0xMjA7/A
Kv2zU3rYqpbOUxCjR1GWGuMpDLhOBBTc7hKhmgK5vuBsBlw2XdtsFyNC7bKn
9vqVM/C6vKGYDhQiV3X3Wp0nDPjbvJDYMU2IevTW6wzVTvH/7PRffHYEjXj+
GPZuY0DOwTMrM30YSVYcDNg9xoCSb+x1zdQhFN1i3ag6ycBh2+CW5DlDaPYw
h34vyZv6F2sNuYhBpLRoZMxJgQehz5fPttk1gDSDvUJttHkQnRZeLTvZi3TX
dFhnUDwQv25S3OjVixgJh9WDfB4IhkrMHf/tQUZ/mfYe38ADeoW7o83lbuRy
Tccm15kH2zyCdHUWf0Tnm8nqaWd5MPe3hOkfrrQhKd7xvvxRHmTkD3aVPbuO
5Ca/Vk5844HX+pnXx0zOI8VH/unGEnxYm+1y/NYiS6xm4Wb7Vo4PLwek3Onn
N7CBp/FjaU0+nPS2/fNg/CMcnCKbsdOBD9Xpx1PEVDM+siMqLMeFD/WHF/iM
n3+FI5f+sB314EOtmsyocKIFn7szInc6gA+sM4pdIWjDt580hBXF8UFfaF2y
RK0Dd39OtZN9yAfu7LQHdTnd+Op6OujdYz4c0mHmJlj24F3xdWfza/iwVITL
hZ978JvlUs+tW/mwRdfASE+/DzdYB65NG+VDYq1+kUTmAD6TMcfBb4IPpT3q
FXncQWw+lBMMkuyU31Sm+VYO4urIjjvd8izcjSqa/aZ1CJcXmKvparNQMysu
pbpjGIf/6DP4RbGQNcMqZLPjCNY3PenYwLJg52nlv/vfEVzUWZZ40JiF20k6
qtoFQhyoY5tvYs4CT2+vkau8CK8OFdUutGbh21/zilyMRPiWgpZUuSsLtzRn
672/JsJ7dlQuPefNQkhrLbJpEmGNGzsN3fxY4F+NDez7JcKZhsmHpMNZ0DJX
SNpuLcYucauTWyNZkCrW0FINE+PFLTV3b51mQXSxnf6aLsapvpKDW1On+DwK
9pZ8FGObsjTppeksOFSUfE+RJFhRSm/Z6DUWwgOkWv1VCK63bEJPclmY9TW5
YoM+wWfS/JxTC1kwDPu7SNaKYPN+mcM+ZSx4z1cefrKHYBnm75S1FSxUJhe9
O3CU4KfHoXDOs6n9Y9G8mecIjqp9W9fxkoWXV2Q7TmcSbDT/0FBBMwvj1Ycl
vuQR/MtNcVbUWxa+fhdPmj4gWJB3Z7ndRxZsHucdiHpCcNjE5vV/DLDQ27aS
f+3lVJ7b1L1zQsjCjYUmXjlNBH9OOB724gsL7RecrM+9Jnjro9oVod/Y/+fF
/wJ35v6+
        "]], LineBox[CompressedData["
1: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

        "]], LineBox[CompressedData["
1:eJxNz0FMEnAYBXAKDs6waS4baYrpMkVntXGwsqVYoaCJjLZwtSQRCMLVYGvG
VrkRWVlUTE3nWJC2xtBszM1yLBVFQnBZ1iHsoHOO6JAxNlEW1db+z7d9e/vd
vpctaa6TbqVQKGV/71+fzdod4lArjlP+J011foKZCAdZYxOlSfBoKMclToYl
yqDLlAazWfzJIQacEBqY9GfAg5c0Uwk5cEwRd+uK4dl8yfTTQ7Al6JoeZsOV
iruen0fgDvlObyMXLpax/PwG+Jsiq9neCN9XpSZvl2/ad2VDMKuGrTrvvEAH
73qsXDjTCcdHbT8u+Db9u6Nwm7bkBPHbgdaeQupJ4utbCmpnFuDEQAtX7ThF
vNyfbTLruMSm/QzaiKiS2Njd5G5gVhGLTef89BV4raIvanbyiJeWy6+NG/jE
ltKD6b6GamK7XpsiK6ohNogu8qgRmB149tLgO03cld9j9/FqiW+8a+/ijcDV
6aK+97kC4jK1uz6lDTZnSHJnInDuxIuOmvo67CsaL5hzwk1h2gdPgZBYMvSL
2fYQVrUKY1WPYK3Q8YX+BL4T0T4wdsADJdGNzl44Ohb/3G+DjXP0dpcb7rZe
lt/2wFaNn8P1wsNpxnWvHw6IU+Uf5+G8JQZncQk+4GjJfL4MH9Z/jUpXYH5e
76vgd/iqkpm5ugrrjt6Kvg7D+qTFT5oI3DVovbe2Bltu0mRv1mGbQFqui8GO
vVN7jv2GneF90Xgc/gPjSvFf
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$45769#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.894877311451007*^9, 3.8948776449691715`*^9, 3.8948785674493303`*^9, 
   3.8948835204851866`*^9, 3.894883669388301*^9, 3.894884302098345*^9, 
   3.8949732193847623`*^9, 3.8949733969505253`*^9, {3.894975952750913*^9, 
   3.894975978095807*^9}, 3.8949761320361133`*^9, {3.8949761988455777`*^9, 
   3.894976205150019*^9}, 3.894976280856413*^9, 3.8949767330532827`*^9, 
   3.8950457652501945`*^9, 3.8950458685057707`*^9, 3.8950461293789425`*^9, 
   3.895047749231258*^9, {3.8966842917241507`*^9, 3.8966843182719283`*^9}, 
   3.896684492259678*^9, 3.896708698566267*^9, 3.896708793652185*^9, 
   3.896710034058896*^9, 3.896710196002983*^9, 3.896711381818877*^9, 
   3.8967114256194167`*^9, 3.8967117698699894`*^9, 3.89671287383084*^9, 
   3.896740512888669*^9, 3.896740663837291*^9, 3.896741037252084*^9, {
   3.8967410689316797`*^9, 3.896741120853733*^9}, 3.8967411849989786`*^9, {
   3.8967413542671356`*^9, 3.896741379876574*^9}, 3.8967415528234367`*^9, {
   3.896769234430101*^9, 3.896769313529823*^9}, {3.8967876343066792`*^9, 
   3.89678764894847*^9}, 3.896787885779319*^9, 3.896787976397684*^9, 
   3.896788015726269*^9, 3.8967880885699368`*^9, 3.8967881190047584`*^9, 
   3.896788158201424*^9, {3.8968421144394627`*^9, 3.8968421326347103`*^9}, 
   3.8982710606996984`*^9, 3.89827114214295*^9, 3.8982716868244286`*^9, 
   3.8982718436014423`*^9, 3.8982720096847897`*^9, 3.898272401253867*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"7e369460-9b68-419f-bb09-b29963ddd07f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function definitions", "Section",
 CellChangeTimes->{{3.883373588923236*^9, 3.8833735905636816`*^9}, {
  3.8833783804476204`*^9, 3.883378383455702*^9}, {3.8850428424614525`*^9, 
  3.8850428679206676`*^9}},ExpressionUUID->"6d7d3f2f-12aa-4bbe-9371-\
8bdcba80fc8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"buildMatrix", "[", "tIndex_Integer", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "j", ",", "result", ",", "center", ",", "left", ",", "right", 
       ",", "bottom", ",", "top", ",", "mainIdx", ",", "tg"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Sparce", " ", 
       RowBox[{"matrix", ".", " ", "We"}], " ", "only", " ", "need", " ", 
       "the", " ", "center", " ", "and", " ", "4", " ", "neighbors", " ", 
       "from", " ", "each", " ", "cell"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0.0", ",", "numNodes", ",", "5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Add", " ", "contributions", " ", "to", " ", "nodes", " ", "below", 
        " ", "the", " ", "free", " ", "surface"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"m", "-", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "n"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"center", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2.0"}], 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]x", "/", "\[CapitalDelta]z"}], 
                ")"}]}], "-", 
              RowBox[{"2.0", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]z", "/", "\[CapitalDelta]x"}], 
                ")"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"left", "=", 
             RowBox[{"right", "=", 
              RowBox[{"\[CapitalDelta]z", "/", "\[CapitalDelta]x"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"top", "=", 
             RowBox[{"bottom", "=", 
              RowBox[{"\[CapitalDelta]x", "/", "\[CapitalDelta]z"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Left", " ", "boundary"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"right", "+=", "left"}], ";", "\[IndentingNewLine]", 
               RowBox[{"left", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Right", " ", "boundary"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"left", "+=", "right"}], ";", "\[IndentingNewLine]", 
               RowBox[{"right", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"j", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"Bottom", " ", "boundary"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"top", "+=", "bottom"}], ";", "\[IndentingNewLine]", 
               RowBox[{"bottom", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"mainIdx", "=", 
             RowBox[{"index", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"mainIdx", ",", "centerIdx"}], "]"}], "]"}], "=", 
             "center"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"mainIdx", ",", "leftIdx"}], "]"}], "]"}], "=", 
             "left"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"mainIdx", ",", "rightIdx"}], "]"}], "]"}], "=", 
             "right"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"mainIdx", ",", "bottomIdx"}], "]"}], "]"}], "=", 
             "bottom"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"mainIdx", ",", "topIdx"}], "]"}], "]"}], "=", "top"}],
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Add", " ", "contributions", " ", "to", " ", "nodes", " ", "on", " ", 
        "the", " ", "free", " ", "surface"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tg", "=", 
       RowBox[{
        SuperscriptBox["\[Tau]", "2"], "g"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"center", "=", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"4", "+", 
             FractionBox["tg", "\[CapitalDelta]z"], "+", 
             FractionBox[
              RowBox[{"tg", " ", "\[CapitalDelta]z"}], 
              SuperscriptBox["\[CapitalDelta]x", "2"]]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"left", "=", 
          RowBox[{"right", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tg", " ", "\[CapitalDelta]z"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["\[CapitalDelta]x", "2"]}], ")"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"bottom", "=", 
          RowBox[{"tg", "/", "\[CapitalDelta]z"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"top", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Left", " ", "boundary"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"right", "+=", "left"}], ";", "\[IndentingNewLine]", 
            RowBox[{"left", "=", "0"}], ";"}]}], "\[IndentingNewLine]", "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Right", " ", "boundary"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"left", "+=", "right"}], ";", "\[IndentingNewLine]", 
            RowBox[{"right", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"mainIdx", "=", 
          RowBox[{"index", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"mainIdx", ",", "centerIdx"}], "]"}], "]"}], "=", 
          "center"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"mainIdx", ",", "leftIdx"}], "]"}], "]"}], "=", "left"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"mainIdx", ",", "rightIdx"}], "]"}], "]"}], "=", 
          "right"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"mainIdx", ",", "bottomIdx"}], "]"}], "]"}], "=", 
          "bottom"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"mainIdx", ",", "topIdx"}], "]"}], "]"}], "=", "top"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buildRightSide", "[", 
     RowBox[{"tIndex_Integer", ",", "\[Phi]_", ",", "hi_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", ",", "i", ",", "tg", ",", "mainIdx"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0.0", ",", "numNodes"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Contributions", " ", "from", " ", "nodes", " ", "on", " ", "the", 
         " ", "right", " ", 
         RowBox[{"boundary", ".", " ", "Skip"}], " ", "the", " ", "free", " ",
          "surface", " ", "node"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "m"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"index", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "i"}], "]"}], "]"}], "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"-", "2"}], "\[CapitalDelta]z", " ", 
            RowBox[{"rightVel", "[", 
             RowBox[{"tCoord", "[", 
              RowBox[{"[", "tIndex", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Contributions", " ", "from", " ", "nodes", " ", "on", " ", "the", 
         " ", "free", " ", "surface"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"tg", "=", 
        RowBox[{"\[Tau]", " ", "g"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mainIdx", "=", 
           RowBox[{"index", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "m"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", "mainIdx", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], 
             RowBox[{"\[Phi]", "[", 
              RowBox[{"[", "mainIdx", "]"}], "]"}]}], "+", 
            RowBox[{"\[Tau]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", "g", " ", 
                RowBox[{"hi", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", "+", 
               RowBox[{
                FractionBox["tg", "\[CapitalDelta]z"], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"[", "mainIdx", "]"}], "]"}], "-", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"[", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"m", "-", "1"}]}], "]"}], "]"}], "]"}], "]"}]}], 
                 ")"}]}], "\[IndentingNewLine]", "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"tg", " ", "\[CapitalDelta]z"}], 
                 SuperscriptBox["\[CapitalDelta]x", "2"]], 
                RowBox[{"\[Phi]", "[", 
                 RowBox[{"[", "mainIdx", "]"}], "]"}]}], 
               "\[IndentingNewLine]", "-", 
               RowBox[{
                FractionBox[
                 RowBox[{"tg", " ", "\[CapitalDelta]z"}], 
                 RowBox[{"2", 
                  SuperscriptBox["\[CapitalDelta]x", "2"]}]], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"[", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", ">", "1"}], ",", 
                    RowBox[{"i", "-", "1"}], ",", 
                    RowBox[{"i", "+", "1"}]}], "]"}], ",", "m"}], "]"}], 
                    "]"}], "]"}], "]"}], "+", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"[", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "<", "n"}], ",", 
                    RowBox[{"i", "+", "1"}], ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", "m"}], "]"}], 
                    "]"}], "]"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
              ")"}]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Right", " ", "boundary", " ", "contribution"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[Equal]", "n"}], ",", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", "mainIdx", "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[Tau]", "2"], "g", " ", 
                 "\[CapitalDelta]z"}], "\[CapitalDelta]x"]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"rightVel", "[", 
                 RowBox[{"tCoord", "[", 
                  RowBox[{"[", 
                   RowBox[{"tIndex", "+", "1"}], "]"}], "]"}], "]"}], "+", 
                RowBox[{"rightVel", "[", 
                 RowBox[{"tCoord", "[", 
                  RowBox[{"[", "tIndex", "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Find", " ", "the", " ", "solution", " ", "of", " ", 
      RowBox[{"X", "'"}], "s", " ", "of", " ", "the", " ", "given", " ", 
      "tridiagonal", " ", "block", " ", 
      RowBox[{"matrix", "\[IndentingNewLine]", "@", "param"}], " ", "matrix", 
      " ", "A", " ", "table", " ", "of", " ", "n", "*", "m", " ", "vectors", 
      " ", "of", " ", "5", " ", 
      RowBox[{"elements", ".", " ", "These"}], " ", "are", " ", "all", " ", 
      "the", " ", "non"}], "-", 
     RowBox[{
     "zero", " ", "elements", " ", "in", " ", "the", " ", "actual", " ", 
      RowBox[{"matrix", ".", "\[IndentingNewLine]", 
       RowBox[{"@", "param"}]}], " ", "rhx", " ", "A", " ", "vector", " ", 
      "of", " ", "n", "*", "m", " ", 
      RowBox[{"elements", ".", " ", "This"}], " ", "is", " ", "the", " ", 
      "right", " ", "hand", " ", "side", " ", "of", " ", "the", " ", "linear",
       " ", 
      RowBox[{"system", ".", "\[IndentingNewLine]", 
       RowBox[{"@", "param"}]}], " ", "n", " ", "The", " ", "number", " ", 
      "of", " ", 
      RowBox[{"blocks", ".", "\[IndentingNewLine]", 
       RowBox[{"@", "param"}]}], " ", "m", " ", "The", " ", "size", " ", "of",
       " ", "each", " ", 
      RowBox[{"block", ".", " ", "They"}], " ", "are", " ", 
      RowBox[{"square", ".", "\[IndentingNewLine]", "The"}], " ", "time", " ",
       "complexity", " ", "of", " ", "the", " ", "algorithm", " ", "is", " ", 
      "O", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "*", 
         RowBox[{"m", "^", "3"}]}], ")"}], ".", " ", "For"}], " ", "better", 
      " ", "performance", " ", "pick", " ", "m"}]}], "<", 
    RowBox[{"n", "."}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solveBlockTridiag", "[", 
    RowBox[{"matrix_", ",", "rhs_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "w", ",", "f", ",", "k", ",", "i", ",", "a", ",", "b", ",", "result"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"w", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"w", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"Inverse", "[", "\[IndentingNewLine]", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Band", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
             RowBox[{"matrix", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", "m"}], ",", "centerIdx"}], "]"}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Band", "[", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
             RowBox[{"matrix", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"2", ";;", "m"}], ",", "bottomIdx"}], "]"}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Band", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
             RowBox[{"matrix", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", 
                 RowBox[{"m", "-", "1"}]}], ",", "topIdx"}], "]"}], "]"}]}]}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "m"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ".", 
        RowBox[{"rhs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "m"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ".", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Band", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
           RowBox[{"matrix", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", "m"}], ",", "rightIdx"}], "]"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "m"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"n", "-", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Band", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
             RowBox[{"matrix", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "m"}]}], ";;", 
                 RowBox[{"i", " ", "m"}]}], ",", "leftIdx"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "m"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Band", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
             RowBox[{"matrix", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "m"}]}], ";;", 
                 RowBox[{"i", " ", "m"}]}], ",", "rightIdx"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "m"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{"Inverse", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Band", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                 RowBox[{"matrix", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "m"}]}], ";;", 
                    RowBox[{"i", " ", "m"}]}], ",", "centerIdx"}], "]"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Band", "[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                 RowBox[{"matrix", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "m"}]}], ";;", 
                    RowBox[{"i", " ", "m"}]}], ",", "bottomIdx"}], "]"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Band", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                 RowBox[{"matrix", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "m"}]}], ";;", 
                    RowBox[{
                    RowBox[{"i", " ", "m"}], "-", "1"}]}], ",", "topIdx"}], 
                   "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "m"}], "}"}]}], "]"}], "\[IndentingNewLine]",
             "-", 
            RowBox[{"a", ".", 
             RowBox[{"k", "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rhs", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "m"}]}], ";;", 
                RowBox[{"i", " ", "m"}]}], "]"}], "]"}], "-", 
             RowBox[{"a", ".", 
              RowBox[{"f", "[", 
               RowBox[{"[", 
                RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"k", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "b"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"n", " ", "m"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{"matrix", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
              RowBox[{"n", " ", "m"}]}], ",", "leftIdx"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "m"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"w", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "=", 
       RowBox[{"Inverse", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Band", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
              RowBox[{"matrix", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
                  RowBox[{"n", " ", "m"}]}], ",", "centerIdx"}], "]"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Band", "[", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", 
              RowBox[{"matrix", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
                  RowBox[{"n", " ", "m"}]}], ",", "bottomIdx"}], "]"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Band", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
              RowBox[{"matrix", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
                  RowBox[{
                   RowBox[{"n", " ", "m"}], "-", "1"}]}], ",", "topIdx"}], 
                "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "m"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
         "-", 
         RowBox[{"a", ".", 
          RowBox[{"k", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
          RowBox[{"n", " ", "m"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", "n", "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rhs", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
             RowBox[{"n", " ", "m"}]}], "]"}], "]"}], "-", 
          RowBox[{"a", ".", 
           RowBox[{"f", "[", 
            RowBox[{"[", 
             RowBox[{"n", "-", "1"}], "]"}], "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"n", "-", "1"}]}], ",", 
        RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
        RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], " ", "m"}]}], ";;", 
             RowBox[{"i", " ", "m"}]}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"k", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ".", 
            RowBox[{"result", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", "+", 
                RowBox[{"i", " ", "m"}]}], ";;", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "+", "1"}], ")"}], " ", "m"}]}], "]"}], 
             "]"}]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"buildInterpolation", "[", 
    RowBox[{"hi_", ",", "xs_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"ts", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"hi", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "t"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.882881189569041*^9, 3.882881285039916*^9}, {
   3.882881699417963*^9, 3.8828817510591793`*^9}, {3.882881886518013*^9, 
   3.882882120667685*^9}, {3.8828822690676193`*^9, 3.8828823081074862`*^9}, {
   3.8828824010573215`*^9, 3.8828824036082664`*^9}, {3.882882490807102*^9, 
   3.882882565956889*^9}, {3.8828826229169483`*^9, 3.882882823606498*^9}, {
   3.883229277511205*^9, 3.8832293606703324`*^9}, {3.8832294047266674`*^9, 
   3.883229407650838*^9}, {3.8832294439840136`*^9, 3.883229490901822*^9}, {
   3.883229551871355*^9, 3.883229553433442*^9}, {3.8832296002918777`*^9, 
   3.8832296713901415`*^9}, {3.883230225452199*^9, 3.883230236453184*^9}, {
   3.8832302824289927`*^9, 3.8832303845022154`*^9}, {3.8832304157291336`*^9, 
   3.883230418899759*^9}, {3.8832305321625156`*^9, 3.883230648135902*^9}, {
   3.8832306922321787`*^9, 3.883231027388382*^9}, {3.8832311024703827`*^9, 
   3.8832311073115196`*^9}, {3.883231504019458*^9, 3.8832316120118876`*^9}, {
   3.8832316442243385`*^9, 3.8832317850550585`*^9}, {3.883231822717415*^9, 
   3.8832318256693783`*^9}, {3.883231863611047*^9, 3.8832318660479465`*^9}, {
   3.8832319100923834`*^9, 3.883231918240924*^9}, {3.883231972040289*^9, 
   3.8832319859749436`*^9}, {3.8832320301535716`*^9, 3.883232030825303*^9}, {
   3.8832320764264746`*^9, 3.8832321431317053`*^9}, {3.8832323811955166`*^9, 
   3.883232383179262*^9}, {3.8832332753874083`*^9, 3.883233301665714*^9}, {
   3.883233607300892*^9, 3.883233729753194*^9}, {3.8832340378118873`*^9, 
   3.883234039281787*^9}, {3.8832341271326303`*^9, 3.8832341923303413`*^9}, {
   3.88323494626569*^9, 3.8832350204534082`*^9}, {3.883235892256832*^9, 
   3.883235908713058*^9}, {3.8833734074209833`*^9, 3.883373443720086*^9}, 
   3.883373476647803*^9, {3.8833735763633313`*^9, 3.8833736603633595`*^9}, {
   3.8833738127497597`*^9, 3.883373849252986*^9}, {3.88337590752516*^9, 
   3.883375914321137*^9}, {3.8833759578484683`*^9, 3.883375958053809*^9}, {
   3.883376015099761*^9, 3.88337601539322*^9}, {3.883376049040701*^9, 
   3.883376117123602*^9}, {3.8833762065934277`*^9, 3.883376237442164*^9}, {
   3.8833767541536674`*^9, 3.883376827798356*^9}, {3.883377512204432*^9, 
   3.8833775281798134`*^9}, {3.8833776863025627`*^9, 3.883377691834625*^9}, {
   3.8833777426034284`*^9, 3.883377746451758*^9}, {3.883378387588629*^9, 
   3.8833783982076387`*^9}, {3.8833789821725693`*^9, 
   3.8833790381316795`*^9}, {3.883379190590523*^9, 3.883379251030225*^9}, {
   3.8833792853982253`*^9, 3.8833793074428988`*^9}, {3.883379454176201*^9, 
   3.883379668343934*^9}, {3.8833800671985016`*^9, 3.883380088675129*^9}, {
   3.8833802776786957`*^9, 3.8833802778153505`*^9}, {3.8833804765147486`*^9, 
   3.883380652792529*^9}, {3.883381153077964*^9, 3.883381155887357*^9}, {
   3.8833818013131256`*^9, 3.883381887455015*^9}, {3.8833819609827967`*^9, 
   3.883382034354478*^9}, {3.883382066199656*^9, 3.883382100512733*^9}, {
   3.8833875818465233`*^9, 3.883387585779591*^9}, {3.883387641610902*^9, 
   3.8833877715521135`*^9}, {3.8833878279627504`*^9, 
   3.8833879276541038`*^9}, {3.8833881246816745`*^9, 
   3.8833881257796817`*^9}, {3.883388171858305*^9, 3.8833882661562147`*^9}, {
   3.883388313734235*^9, 3.883388420107547*^9}, {3.883388552007233*^9, 
   3.8833885901061373`*^9}, {3.8833886282924147`*^9, 3.883388670913145*^9}, {
   3.88338871740629*^9, 3.8833887342439036`*^9}, {3.883389320256488*^9, 
   3.883389447679038*^9}, {3.883390093911208*^9, 3.883390185180961*^9}, {
   3.8833902426210375`*^9, 3.8833903495455875`*^9}, {3.8833903895755444`*^9, 
   3.8833904318964863`*^9}, {3.883391154929556*^9, 3.8833911788679543`*^9}, {
   3.8833914908779736`*^9, 3.883391704808709*^9}, {3.883391771367667*^9, 
   3.8833918060369587`*^9}, {3.8833918935412617`*^9, 
   3.8833919088647804`*^9}, {3.8833921120479765`*^9, 3.883392146384989*^9}, {
   3.8833922212344475`*^9, 3.8833924487277613`*^9}, {3.883392539285016*^9, 
   3.883392546169037*^9}, {3.883392681698147*^9, 3.883392708644879*^9}, {
   3.8833927721360035`*^9, 3.8833927743480463`*^9}, 3.8833928513635774`*^9, 
   3.8833991458196115`*^9, {3.883403387467227*^9, 3.8834034044133472`*^9}, {
   3.883404180418486*^9, 3.8834042044768467`*^9}, {3.883404325942037*^9, 
   3.8834044160413823`*^9}, {3.883409455628559*^9, 3.883409503315955*^9}, {
   3.8835729920866885`*^9, 3.8835731202952147`*^9}, {3.8835731563412905`*^9, 
   3.883573160850777*^9}, {3.8835747254688325`*^9, 3.8835747506285057`*^9}, {
   3.883574786607718*^9, 3.883574794158851*^9}, {3.883574952638344*^9, 
   3.883575086868224*^9}, {3.8835751644278746`*^9, 3.883575165477632*^9}, {
   3.8835752639176*^9, 3.883575264547702*^9}, {3.8835753524077396`*^9, 
   3.8835753592976484`*^9}, {3.883575471076418*^9, 3.883575482367381*^9}, {
   3.88357564271649*^9, 3.883575652587214*^9}, {3.883575768436837*^9, 
   3.883575768746874*^9}, {3.8835758761460447`*^9, 3.8835759072758293`*^9}, {
   3.883577805905277*^9, 3.8835778120116615`*^9}, {3.88365431896321*^9, 
   3.883654323464834*^9}, {3.8836546700624304`*^9, 3.883654707032442*^9}, {
   3.8836547927029333`*^9, 3.8836548855220623`*^9}, {3.883656723019055*^9, 
   3.8836567513285713`*^9}, {3.883656786249389*^9, 3.8836567908584533`*^9}, 
   3.8836569206981363`*^9, {3.8836569536078596`*^9, 3.883657027857783*^9}, {
   3.883658074420967*^9, 3.883658089245864*^9}, {3.883712137373021*^9, 
   3.883712426413757*^9}, {3.883799495437459*^9, 3.8837995304945807`*^9}, {
   3.8839264643263836`*^9, 3.88392651558852*^9}, {3.883926555330497*^9, 
   3.883926658488592*^9}, {3.8839268714103165`*^9, 3.8839270038308277`*^9}, {
   3.883927060889619*^9, 3.8839271395297723`*^9}, {3.8850332046818385`*^9, 
   3.8850332388836527`*^9}, {3.885033597274248*^9, 3.8850336248518167`*^9}, {
   3.8850336566683564`*^9, 3.885033669882058*^9}, {3.8850337211484447`*^9, 
   3.885034044608037*^9}, {3.885034559667019*^9, 3.885034565553699*^9}, {
   3.885035574949939*^9, 3.885035604345843*^9}, {3.8850356449213476`*^9, 
   3.885035647734769*^9}, {3.885038697115988*^9, 3.885038721574667*^9}, {
   3.8850400032009525`*^9, 3.8850401429042683`*^9}, {3.885040195886342*^9, 
   3.885040220045396*^9}, {3.8850402646655035`*^9, 3.8850402689002485`*^9}, 
   3.88504031394846*^9, {3.885040543319249*^9, 3.885040589610034*^9}, {
   3.8850406312867594`*^9, 3.885040901151376*^9}, 3.8850410065769386`*^9, {
   3.885041153584114*^9, 3.885041155874609*^9}, {3.885041213881245*^9, 
   3.8850412959062777`*^9}, 3.8850414011344013`*^9, {3.8850415334388328`*^9, 
   3.8850415672023277`*^9}, {3.8850418232353134`*^9, 
   3.8850420910174327`*^9}, {3.8850426577588525`*^9, 
   3.8850426765078716`*^9}, {3.8858259004577436`*^9, 3.8858259009585953`*^9}, 
   3.895045743299555*^9, 3.8950479238822327`*^9, 3.8950480042203374`*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"b7dc6190-5aa6-4900-b259-09367d859ddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve linear system using block tri-diagonal solver", "Section",
 CellChangeTimes->{{3.8833989828495893`*^9, 3.8833989945035477`*^9}, {
  3.8850425500956774`*^9, 
  3.885042561383726*^9}},ExpressionUUID->"f6bc9c63-f06f-46b3-a305-\
6ddd19b3668f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solutionH", "=", "None"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solutionF", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mat", ",", "rhs", ",", "i", ",", "j", ",", "k", ",", "\[Phi]", ",", 
      "hi", ",", "kCurr", ",", "kPrev", ",", "elapseT", ",", "hRem", ",", 
      "mRem", ",", "sRem", ",", "tTotal", ",", "tRem"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"hi", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0.0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "t"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", "n"}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{
           RowBox[{"hi", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], "=", 
           RowBox[{"hNorm", "[", 
            RowBox[{"xCoord", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0.0", ",", "2", ",", "numNodes"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"solutionF", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{"\[Phi]", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tTotal", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"hRem", "=", "99"}], ";", "\[IndentingNewLine]", 
        RowBox[{"mRem", "=", "99"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sRem", "=", "99"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "2"}], ",", 
          RowBox[{"k", "\[LessEqual]", "t"}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"kCurr", "=", 
            RowBox[{"1", "+", 
             RowBox[{"Mod", "[", 
              RowBox[{"k", ",", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"kPrev", "=", 
            RowBox[{"1", "+", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"k", "-", "1"}], ",", "2"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"elapseT", "=", 
            RowBox[{
             RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"mat", "=", 
                RowBox[{"buildMatrix", "[", 
                 RowBox[{"k", "-", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"rhs", "=", 
                RowBox[{"buildRightSide", "[", 
                 RowBox[{
                  RowBox[{"k", "-", "1"}], ",", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"[", "kPrev", "]"}], "]"}], ",", 
                  RowBox[{"hi", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "-", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\[Phi]", "[", 
                 RowBox[{"[", "kCurr", "]"}], "]"}], "=", 
                RowBox[{"solveBlockTridiag", "[", 
                 RowBox[{"mat", ",", "rhs", ",", "n", ",", "m"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"solutionF", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "=", 
                RowBox[{"\[Phi]", "[", 
                 RowBox[{"[", "kCurr", "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Update", " ", "the", " ", "free", " ", "surface", " ", 
                 "height"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", 
                 RowBox[{"i", "\[LessEqual]", "n"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"hi", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "i"}], "]"}], "]"}], "=", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["2", 
                    RowBox[{"\[Tau]", " ", "g"}]], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"[", 
                    RowBox[{"kCurr", ",", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "m"}], "]"}], "]"}]}], "]"}], "]"}], 
                    "-", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"[", 
                    RowBox[{"kPrev", ",", 
                    RowBox[{"index", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "m"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"hi", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"k", "-", "1"}], ",", "i"}], "]"}], "]"}]}], 
                    ")"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
              "\[IndentingNewLine]", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tTotal", "+=", "elapseT"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tRem", "=", 
            RowBox[{
             RowBox[{"tTotal", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t", "-", "1"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"k", "-", "1"}], ")"}]}]}], "-", "tTotal"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"hRem", "=", 
            RowBox[{"Floor", "[", 
             RowBox[{"tRem", "/", "3600"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"mRem", "=", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"tRem", ",", "3600"}], "]"}], "/", "60"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"sRem", "=", 
            RowBox[{"Floor", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"tRem", ",", "60"}], "]"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"myPrint", "[", 
         RowBox[{"\"\<Done!\>\"", ",", 
          RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"solutionH", "=", "hi"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ProgressIndicator", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"t", "-", "1"}], ")"}]}], "]"}], ",", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<``/``, Time remaining: ``h, ``m, ``s\>\"", ",", 
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}], ",", 
             RowBox[{"(", 
              RowBox[{"t", "-", "1"}], ")"}], ",", "hRem", ",", "mRem", ",", 
             "sRem"}], "]"}]}], "}"}], ",", "\"\< \>\""}], "]"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"solutionH", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "l"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "tMax"}], "}"}]}], "}"}]}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8833994253081355`*^9, 3.883399477858903*^9}, {
   3.883399595132308*^9, 3.8833998337865095`*^9}, {3.88339990957773*^9, 
   3.8834001478141375`*^9}, {3.883400188632965*^9, 3.8834001976029263`*^9}, {
   3.883400229795764*^9, 3.883400233066886*^9}, {3.883400285117941*^9, 
   3.8834004576278563`*^9}, {3.8834005074389725`*^9, 3.88340052367028*^9}, {
   3.8834005539554815`*^9, 3.8834006779333153`*^9}, {3.8834007616772313`*^9, 
   3.883400847779869*^9}, {3.883400880912042*^9, 3.883400908600379*^9}, {
   3.883400943005*^9, 3.8834009440135646`*^9}, {3.883401112891464*^9, 
   3.8834012320165462`*^9}, {3.8834013176648073`*^9, 3.883401320572117*^9}, {
   3.883401445370432*^9, 3.8834014686863174`*^9}, {3.88340157118721*^9, 
   3.883401639647879*^9}, {3.883402498331817*^9, 3.883402505623869*^9}, {
   3.883402561741702*^9, 3.883402571550256*^9}, {3.883402639798582*^9, 
   3.883402642911746*^9}, {3.883402746804392*^9, 3.88340276608484*^9}, {
   3.8834034870839396`*^9, 3.8834035274459558`*^9}, {3.8834035746695147`*^9, 
   3.8834036618941545`*^9}, {3.8834037040083413`*^9, 3.883403852346835*^9}, {
   3.8834040532061863`*^9, 3.8834040819258375`*^9}, {3.8834042393899994`*^9, 
   3.883404286083604*^9}, {3.883404427765421*^9, 3.8834044403538017`*^9}, {
   3.8834051430687037`*^9, 3.8834051431875134`*^9}, {3.8834054936971483`*^9, 
   3.8834054937560763`*^9}, 3.8834055449215384`*^9, {3.8834060300375466`*^9, 
   3.88340603038811*^9}, {3.883406969139033*^9, 3.883407058767334*^9}, {
   3.883407131335684*^9, 3.883407242177696*^9}, {3.8834073497976723`*^9, 
   3.8834073540241966`*^9}, {3.8834085638734293`*^9, 
   3.8834085665118055`*^9}, {3.8834105672441454`*^9, 3.883410588653318*^9}, {
   3.883410655066318*^9, 3.883410687687462*^9}, {3.8834107345047975`*^9, 
   3.8834107671224575`*^9}, {3.883410797194929*^9, 3.88341079722616*^9}, {
   3.8834124821986265`*^9, 3.8834124852915564`*^9}, {3.8835732053910294`*^9, 
   3.8835732430914516`*^9}, {3.883573274220817*^9, 3.8835732976716623`*^9}, 
   3.8835734060306535`*^9, 3.883577773369475*^9, {3.8836538434235015`*^9, 
   3.883654139573268*^9}, {3.8836549272918878`*^9, 3.88365493384171*^9}, {
   3.883654987851873*^9, 3.8836550660117645`*^9}, {3.8836552078213596`*^9, 
   3.8836553184417906`*^9}, {3.8836554535111237`*^9, 3.883655483060786*^9}, {
   3.883655516640848*^9, 3.8836555255509024`*^9}, {3.883655564280771*^9, 
   3.88365556964078*^9}, {3.8836556202305026`*^9, 3.883655723863577*^9}, {
   3.883655858640315*^9, 3.883655870670514*^9}, {3.883656845768484*^9, 
   3.8836568571283617`*^9}, {3.883657072408074*^9, 3.8836570798289423`*^9}, {
   3.883657758172387*^9, 3.883657772536709*^9}, {3.8836581078494225`*^9, 
   3.883658113344865*^9}, 3.8836581622870407`*^9, {3.883658197431514*^9, 
   3.8836581990245028`*^9}, 3.8836589839527445`*^9, {3.8836590265137186`*^9, 
   3.8836590910818415`*^9}, {3.88365912477605*^9, 3.883659234826402*^9}, {
   3.883659307424219*^9, 3.883659310651447*^9}, {3.8836606060889444`*^9, 
   3.883660712799254*^9}, {3.883660744158794*^9, 3.8836609378117805`*^9}, {
   3.8836611406726947`*^9, 3.8836611751479177`*^9}, {3.8836612965909777`*^9, 
   3.883661349017333*^9}, {3.8836614431772738`*^9, 3.883661443397606*^9}, {
   3.8836617033469553`*^9, 3.8836617038068347`*^9}, {3.8836618629464602`*^9, 
   3.8836618737367363`*^9}, {3.8836620793463755`*^9, 3.883662095195967*^9}, {
   3.8836623264758515`*^9, 3.8836623637355814`*^9}, {3.883711985076895*^9, 
   3.8837119918479834`*^9}, {3.88371246592796*^9, 3.883712544116912*^9}, 
   3.883712574459543*^9, {3.883712610586487*^9, 3.8837126286978073`*^9}, {
   3.883712683227401*^9, 3.8837126835711617`*^9}, {3.883713234749362*^9, 
   3.883713252963029*^9}, 3.8837993708648167`*^9, {3.883799547280163*^9, 
   3.8837995853129973`*^9}, {3.883799832557556*^9, 3.8837998347309217`*^9}, {
   3.8837998684066496`*^9, 3.8837998707681026`*^9}, {3.883927566255927*^9, 
   3.8839275690071635`*^9}, 3.8839280270634847`*^9, {3.883961031076496*^9, 
   3.8839610678653526`*^9}, {3.8839612360268073`*^9, 3.88396128123246*^9}, {
   3.8850421789927034`*^9, 3.8850422084545784`*^9}, {3.88504226801159*^9, 
   3.885042293586794*^9}, {3.885042378822384*^9, 3.885042432690641*^9}, {
   3.8850424633175397`*^9, 3.8850424946994314`*^9}, 3.885043652257744*^9, 
   3.885211639798338*^9, 3.885823382068646*^9, 3.895045875925824*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"a4c123cd-a0e9-43a4-95ad-ebbf1d7530b7"],

Cell[BoxData[
 InterpretationBox["\<\"Done!\"\>",
  StringForm["Done!"],
  Editable->False]], "Print",
 CellChangeTimes->{3.898271183803226*^9, 3.8982716457329187`*^9, 
  3.8982717252306347`*^9, 3.898271881239454*^9, 3.8982720554279003`*^9, 
  3.8982724308824615`*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"92b88c06-0865-41b7-82b7-db5d6dc1f869"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"finiteSol", "=", 
   RowBox[{"buildInterpolation", "[", 
    RowBox[{"solutionH", ",", "xCoord", ",", "tCoord"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nF", "=", "40"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "fourier", " ", "coefficients"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"i", " ", "\[Pi]"}], "l"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "nF"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeff", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox["2", "l"], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hInitial", "[", "x", "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"i", " ", "\[Pi]"}], "l"], "x"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "l"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nF"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omega", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"i", " ", "\[Pi]"}], "l"], "g", " ", 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"i", " ", "\[Pi]"}], "l"], "h"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nF"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"basis", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"i", " ", "\[Pi]"}], "l"], "x"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"omega", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "time"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nF"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"finiteSol", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2"}], ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"h", "+", 
          RowBox[{"finiteSol", "[", 
           RowBox[{"x", ",", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", 
            RowBox[{
             RowBox[{"2", "h"}], "+", "0.5"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"basis", ".", "coeff"}], "/.", 
        RowBox[{"{", 
         RowBox[{"time", "\[Rule]", "t"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2"}], ",", "1"}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tMax", ",", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8835740440601654`*^9, 3.8835740954291897`*^9}, {
   3.8835741280489483`*^9, 3.883574129714016*^9}, {3.88357419041899*^9, 
   3.8835742368290186`*^9}, {3.8835759587163954`*^9, 
   3.8835760763461237`*^9}, {3.8837977876053247`*^9, 3.883797789606961*^9}, {
   3.883797965915126*^9, 3.883797977984351*^9}, {3.883798493588935*^9, 
   3.883798494689771*^9}, {3.883798841785918*^9, 3.8837988439109783`*^9}, {
   3.8839609458497076`*^9, 3.8839609516383257`*^9}, 3.8850437689169245`*^9, {
   3.894878913922772*^9, 3.8948789140230427`*^9}, {3.8948802226270237`*^9, 
   3.8948802227769527`*^9}, {3.894880275867137*^9, 3.894880276006856*^9}, {
   3.894976680530614*^9, 3.8949767167498207`*^9}, {3.896684628696992*^9, 
   3.896684658779747*^9}, {3.896687584617359*^9, 3.896687626597494*^9}, {
   3.8967115704320493`*^9, 3.8967115933460007`*^9}, {3.8967399854258223`*^9, 
   3.896739986545347*^9}, {3.898271232006571*^9, 3.898271278150647*^9}, {
   3.8982713376138725`*^9, 3.898271337750867*^9}, 3.89827139748971*^9, {
   3.8982714680590897`*^9, 3.8982714876406727`*^9}, {3.898271568872089*^9, 
   3.898271596461969*^9}, {3.8982721093627768`*^9, 3.898272199658413*^9}, {
   3.898272237047462*^9, 3.898272250247505*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"78cb9d6b-ebb8-4cda-b0a6-78ae96c2a8a7"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"hNorm", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"h", "+", 
        RowBox[{"finiteSol", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"l", "+", 
          RowBox[{"rightDisplace", "[", "t", "]"}]}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"l", "+", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", 
            RowBox[{
             RowBox[{"2", "h"}], "+", "0.5"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"l", "+", 
            RowBox[{"rightDisplace", "[", "t", "]"}]}], ",", "0"}], "}"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"l", "+", 
            RowBox[{"rightDisplace", "[", "t", "]"}]}], ",", "3"}], "}"}]}], 
        "}"}], ",", " ", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"basis", ".", "coeff"}], "/.", 
         RowBox[{"{", 
          RowBox[{"time", "\[Rule]", "t"}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tMax", ",", 
     RowBox[{"AnimationRate", "\[Rule]", "3"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8982724615544567`*^9, 3.8982724848123455`*^9}, {
   3.898272601250512*^9, 3.8982726220011787`*^9}, {3.898272724410491*^9, 
   3.8982728392946873`*^9}, {3.898272897640753*^9, 3.8982729105129313`*^9}, 
   3.8982730165547647`*^9, {3.8982730526722517`*^9, 3.898273093228315*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"dfbb85a0-2327-4cbb-a543-ed51f1c27a48"],

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"basis", ".", "coeff"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "4"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"BarLegend", "[", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", "0.6"}], "}"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", 
        RowBox[{
        "\"\<M10DefaultDensityGradient\>\"", ",", "\"\<ColorFunction\>\""}], 
        "]"}], "[", 
       RowBox[{"Rescale", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", "0.6"}], "}"}]}], "]"}], "]"}], "&"}], 
     ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8948785267236605`*^9, 3.8948785295846663`*^9}, {
  3.8948786864068875`*^9, 3.894878688998026*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"ef4b5b71-340d-4a2f-bab0-46169e9908ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorFunc", "=", 
   RowBox[{"buildInterpolation", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"basis", ".", "coeff"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "\[Rule]", 
             RowBox[{"xCoord", "[", 
              RowBox[{"[", "xx", "]"}], "]"}]}], ",", 
            RowBox[{"time", "\[Rule]", 
             RowBox[{"tCoord", "[", 
              RowBox[{"[", "tt", "]"}], "]"}]}]}], "}"}]}], ")"}], "-", 
        RowBox[{"solutionH", "[", 
         RowBox[{"[", 
          RowBox[{"tt", ",", "xx"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"tt", ",", 
         RowBox[{"Length", "[", "tCoord", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", 
         RowBox[{"Length", "[", "xCoord", "]"}]}], "}"}]}], "]"}], ",", 
     "xCoord", ",", "tCoord"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.894880392767336*^9, 3.8948803954573565`*^9}, {
  3.894880687493549*^9, 3.8948807350748744`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"2a719809-7602-48fa-845a-e7f386415213"],

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"errorFunc", "[", 
     RowBox[{"x", ",", "time"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "4"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"BarLegend", "[", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.1"}], "}"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<BlueGreenYellow\>\"", ",", "\"\<ColorFunction\>\""}], 
        "]"}], "[", 
       RowBox[{"Rescale", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.1"}], "}"}]}], "]"}], "]"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.894878745017056*^9, {3.8948787759806604`*^9, 3.894878800517427*^9}, {
   3.89487883825085*^9, 3.894878902074971*^9}, {3.8948789408493233`*^9, 
   3.894878957811203*^9}, {3.8948791335001335`*^9, 3.894879198978304*^9}, {
   3.8948842422232413`*^9, 3.8948842887540846`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"887b6c07-b41d-4e98-8c03-6e37a92f5285"],

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"basis", ".", "coeff"}], "-", 
        RowBox[{"finiteSol", "[", 
         RowBox[{"t1", ",", "t2"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t1", "\[Rule]", "x"}], ",", 
         RowBox[{"t2", "\[Rule]", "time"}]}], "}"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"basis", ".", "coeff"}], "+", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "4"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<t\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"BarLegend", "[", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", 
        RowBox[{"\"\<BlueGreenYellow\>\"", ",", "\"\<ColorFunction\>\""}], 
        "]"}], "[", 
       RowBox[{"Rescale", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "100"}], "}"}]}], "]"}], "]"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8948792588576155`*^9, 3.894879281765817*^9}, {
  3.894879566381638*^9, 3.8948795708623266`*^9}, {3.894880043306955*^9, 
  3.894880057136799*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"36204431-bb98-4481-917f-fdedfe20f191"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"basisH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"ks", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "x"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"omega", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "time"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nF"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exactH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"basisH", ".", "coeff"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"time", "\[Rule]", 
         RowBox[{"tCoord", "[", 
          RowBox[{"[", "kk", "]"}], "]"}]}], ",", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"xCoord", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"kk", ",", "1", ",", "t"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896687209516635*^9, 3.8966872270018797`*^9}, {
  3.896687292489975*^9, 3.896687330030834*^9}, {3.896687390855688*^9, 
  3.8966874210710535`*^9}, {3.8966875224992857`*^9, 3.896687523063179*^9}, {
  3.8966876684721146`*^9, 3.8966876754281216`*^9}, {3.896687742327215*^9, 
  3.8966877436301785`*^9}, {3.8966877793957653`*^9, 
  3.896687843943795*^9}},ExpressionUUID->"589e2077-f0f5-4660-9bce-\
02fba0c2041e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorsH", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"exactH", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "-", 
       RowBox[{"solutionH", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "&"}], ",", 
     RowBox[{"Length", "[", "solutionH", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.896687209516635*^9, 3.8966872270018797`*^9}, {
  3.896687292489975*^9, 3.896687330030834*^9}, {3.896687390855688*^9, 
  3.8966874210710535`*^9}, {3.8966875224992857`*^9, 3.896687523063179*^9}, {
  3.8966876684721146`*^9, 3.8966876754281216`*^9}, {3.896687742327215*^9, 
  3.8966877436301785`*^9}, {3.8966877793957653`*^9, 
  3.8966878684706945`*^9}},ExpressionUUID->"f1f6cf3b-3fc4-405a-a999-\
7c745a7a6050"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "#", "]"}], "]"}], "&"}], "/@", "errorsH"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Norm", "[", "#", "]"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Length", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
      "errorsH"}]}], "}"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "tMax"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Max\>\"", ",", "\"\<\!\(\*SubscriptBox[\(L\), \(2\)]\)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896687874982058*^9, 3.8966879288653283`*^9}, {
  3.896687981536624*^9, 3.896688024393937*^9}, {3.896689157560344*^9, 
  3.8966891705167627`*^9}, {3.896689212815793*^9, 3.896689220891801*^9}, {
  3.896689304266764*^9, 3.896689307770692*^9}, {3.896689516139316*^9, 
  3.8966895633883853`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"be11f3af-2ca3-4440-bf5c-a38c6db1995e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
3H9TFl0q9SUe6O9yCU886ks80NZJ9h97zJd4/Mb9qPy+0gO+xAP9z4Nk1NN9
iccfpl3abOlAKjuf/8H977ARSU2+xANt9x/9+wd9iccfhjvKZ8FUfT/igbb3
m4xJjB/xwPQBx1QLV/gRjz+MQGrRjn2WfsTjD8OPa0/+Z+5HPNB/OU7Ancby
+IPzV7L6qtF+xAPLN7Q98GyTH/HA9F6zIoqy/YgHlhfB8Ym+6Ec8/jJc6bT+
pGd+xAPtVSMsT3ay36u/DH+Cz+bhPX7E4y8jsGLOZ3T4EQ/0bwt3CHjoRzzQ
HzXpUOtJP+Lxl+GNup59o9+PePxlnMCqe9Ukf+KB9hwp4yO43hHyQLtjalGr
nz/x+Mu0z3XZ1RLrTzz+MpyGSVfLkv2Jxz/GKWJVriP6hTz+MTyb+aVamF/I
4x/DNbg2SRTLF/L4x7SvSvtmmciurzD/5tCVtdfY+fwfIyiZm1b4nZ3P0X9g
VqWYYgDx+MfwP1od/jQ2gHhgffXhz60nBRAP9GsLMtcaBhAPrE9vqv5wtQDi
8Y+B0z9rE377Ew/0Tys+6aEbQDwGGZ7T7aJLDgHEY5AR7MnIsUoMIB6DDH+4
ja5MDTt/DDIcje+6/VcDiMcg034t4r3C3QDigfkT5Ef63AogHoMMdAdum3Qu
gHigXyTp87aiAOKB5VffEJWtCyAe2J7nS3/5/AggHph/baxDw5hA4jHIcPsr
x3cvCyQeHGi3mC36Y1Mg9YcDnIMaY5/uDCQ+6Ncav6lmeyD1jwO85y//JDuw
6y8O8IO74/PnBVJ/Mb9Ezcq5Fux6DNM7VYg3xgVS/9F2divsuhhIPLH8rgf+
/A/sfMoBgeG4989Egmg/wwGut63Efukgig+mfzb4QEKa/R5i+hDJDn1OEMUL
26Ov6Kv6jl1fY3seCDRePw2k+GH9r8WWH+QG0XhA2yV16wW7IIonlndov75c
BLv+xvyxBivyi4Movhxwunik2amaXY9j+ic7c3YdDaJ4Y3s35Pu+LGXX55h+
T5J6S0wQxZ8DEPi7eXB7EI0n7I9ooY/WSXa9KwKc61ljTL8GEQ8R4BnEP1ys
HUw80L9rXIPJHHY9LwJwd2KYwspg4iEC/PuJXW8s2fW9CHDN78pdWhRMPNCu
vTn8tlEw8UA7oL1p0rBg4iEC7ZEt29WXBRMPLG+oJ3ddLDsfiYBgp/nOGWfY
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
B9I+bN8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zn1qgR4/iYjQCxXmsAV6/CQhLXpzm+Qs0eMncQw8Yc3QskSPn0T6sUSyoqkl
evwk3k4TQV3ulujxk5Q1G+zOiLNEj19knvYl4W85lujxiwgcj+vpvWaJHr/I
C291naKXlujxiyi+rymWbbFEj19k3+JWf4V/lujxi2w1VXMrkrZCj3ay5nhD
04dZVujRTk5pz45NJ1bo0U4YY8KLb9tZ4XrZTlx27c5x8rNCj3aSkSxZE51g
hR7t5PxHm0/8B63Qo4Mkluw4MlJghR4dhMwQ5HUosUKPDmLLukBU3lihRwcp
/Rr/cVWzFXp0EMbBc021vVbo0UEeDdXLVvBao8dvMnPJNqY20xo9fpNrduti
xdSt0eM38c5TUXZfaI0evwlL3oi5ytAaPX4Tv8phgXuW1ujxm+R1rtCqd7JG
j98kt8M765K/NXp0EtZg/KBFtDV6dJIDeUOzPqdbo0cnMbFhtPodtEaPTtIu
WN2qesYaPTqJwpjSN5kia/Tg/PyRG4nBpdbo0UWe5O7TcqmyRo8u8i3CS1Dk
qzV6dJGmmcpJh7us0aOL9AovWrGcywY9uohXbebFWTI26NFFPu56HJc50wY9
/pDICzc3HTKwQY8/ZMXVhTrxdjbo8Yd8nmN+IWKbDXr8IcLt13yKdtqgxx9y
ViMjfNNFG/T4Qzr/nvfIf22DHt3k0MPo43f/2OD1dJOsSxeySuRs0aeb3B06
NlgNtnh93SRAf52STIAtenUTJaXn7MN5tuS/y/XsJrfbowOC39qiXzcRfA1K
54XtcH3oJrGB0yKXrLJDz26iaZ36QDnJDsejm+Qrmjxa+cQOfbvJvJufag4J
rsfx6SaRdSK3+9atR+9uUqvEdWvB4fU4Xj1E2u/JM+W29ejfQ8zKLOqjF9nj
+PWQgXmPFMXS7XE+9JDdrk2xaQ32OJ49pDbCQvnI/A04P3pI+yuv592pG3B8
e0juXMOj875swPnSQ57fd97Xq+OA491Dnqyrm/p+lwPOnx6ywlHgV3CrA45/
Dzl2c8cKB/2NOJ96iF9fba/Svo3o0UsyTn2vXvN9I3r0kp+ac1x8lziiRy+5
8nLNdka6I3r0kvQ9kf2vax3Ro5fUPD0+R111E86/XvKk/tP9C66b0KOXFP2e
KdV5ZhN69JK8sG7uxKZN6NFLGC0kbER+M3r0kkjVkv6BtZvRo5cMTO8zlwjf
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
QT0=
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 10.}, {0, 0.06168484936488644}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10.}, {0, 0.06168484936488644}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Max\"", "\"\\!\\(\\*SubscriptBox[\\(L\\), \\(2\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[1, 10], 0.1]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[1, 10], 0.1]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[1, 10], 0.1]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[1, 10], 0.1]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.89668788027285*^9, 3.8966879971376204`*^9, 3.8966880292009106`*^9, {
   3.896689162715986*^9, 3.8966891713617835`*^9}, 3.896689221730898*^9, 
   3.896689308989996*^9, 
   3.8966895642745976`*^9},ExpressionUUID->"55a1cd96-99d4-48e0-9524-\
f9d2586c0439"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1069, 1108},
WindowMargins->{{Automatic, 153}, {Automatic, 15}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 161, 3, 73, "Section",ExpressionUUID->"42108651-6b61-4a1e-bd67-8bc5b7bfbc1c"],
Cell[CellGroupData[{
Cell[766, 29, 17824, 432, 1499, "Input",ExpressionUUID->"a11c82e2-ee0a-4188-940e-f76bf6862d06"],
Cell[CellGroupData[{
Cell[18615, 465, 1832, 29, 23, "Print",ExpressionUUID->"f72a2746-8aac-45d4-8319-288f2953a0ac"],
Cell[20450, 496, 1880, 30, 23, "Print",ExpressionUUID->"aa5b3661-242a-4669-9045-f4d712552d1c"]
}, Open  ]],
Cell[22345, 529, 22536, 388, 255, "Output",ExpressionUUID->"e9373409-f03a-4212-87a9-3e2f30389f00"],
Cell[44884, 919, 22806, 393, 255, "Output",ExpressionUUID->"7e369460-9b68-419f-bb09-b29963ddd07f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67739, 1318, 268, 4, 73, "Section",ExpressionUUID->"6d7d3f2f-12aa-4bbe-9371-8bdcba80fc8b"],
Cell[68010, 1324, 38195, 881, 3241, "Input",ExpressionUUID->"b7dc6190-5aa6-4900-b259-09367d859ddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106242, 2210, 251, 4, 73, "Section",ExpressionUUID->"f6bc9c63-f06f-46b3-a305-6ddd19b3668f"],
Cell[CellGroupData[{
Cell[106518, 2218, 12881, 265, 1008, "Input",ExpressionUUID->"a4c123cd-a0e9-43a4-95ad-ebbf1d7530b7"],
Cell[119402, 2485, 374, 9, 23, "Print",ExpressionUUID->"92b88c06-0865-41b7-82b7-db5d6dc1f869"]
}, Open  ]],
Cell[119791, 2497, 5232, 140, 432, "Input",ExpressionUUID->"78cb9d6b-ebb8-4cda-b0a6-78ae96c2a8a7"],
Cell[125026, 2639, 2973, 81, 187, "Input",ExpressionUUID->"dfbb85a0-2327-4cbb-a543-ed51f1c27a48"],
Cell[128002, 2722, 1407, 38, 77, "Input",ExpressionUUID->"ef4b5b71-340d-4a2f-bab0-46169e9908ca"],
Cell[129412, 2762, 1188, 32, 55, "Input",ExpressionUUID->"2a719809-7602-48fa-845a-e7f386415213"],
Cell[130603, 2796, 1570, 40, 77, "Input",ExpressionUUID->"887b6c07-b41d-4e98-8c03-6e37a92f5285"],
Cell[132176, 2838, 1867, 52, 108, "Input",ExpressionUUID->"36204431-bb98-4481-917f-fdedfe20f191"],
Cell[134046, 2892, 1505, 41, 55, "Input",ExpressionUUID->"589e2077-f0f5-4660-9bce-02fba0c2041e"],
Cell[135554, 2935, 790, 18, 32, "Input",ExpressionUUID->"f1f6cf3b-3fc4-405a-a999-7c745a7a6050"],
Cell[CellGroupData[{
Cell[136369, 2957, 1120, 30, 55, "Input",ExpressionUUID->"be11f3af-2ca3-4440-bf5c-a38c6db1995e"],
Cell[137492, 2989, 68819, 1194, 269, "Output",ExpressionUUID->"55a1cd96-99d4-48e0-9524-f9d2586c0439"]
}, Open  ]]
}, Open  ]]
}
]
*)

